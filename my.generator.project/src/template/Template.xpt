«IMPORT assignment6_model»

«EXTENSION template::GeneratorExtensions»

«DEFINE main FOR Configurator»
«FILE name + '.html'»

<head>
	<title>«name»</title>
</head>


<script type="text/javascript" src="https://code.jquery.com/jquery-1.7.2.min.js"></script>
<script type="text/javascript" src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>


  

<style>
  .tab {
    margin-left: 30px;
  }
</style>
<script>
$.fn.serializeObject = function()
{
    var o = {};
    var a = this.serializeArray();
    $.each(a, function() {
        if (o[this.name] !== undefined) {
            if (!o[this.name].push) {
                o[this.name] = [o[this.name]];
            }
            o[this.name].push(this.value || '');
        } else {
            o[this.name] = this.value || '';
        }
    });
    return o;
};
$(function() {
    $('form').submit(function() {
        var txt = JSON.stringify($('form').serializeObject());
        $('#result').text(txt, null, 4);
        var recipe =  window.open('','RecipeWindow','width=600,height=600');
        var html = '<html><head><title>Result Window</title></head><body><div>' + txt + '</div></body></html>';
        recipe.document.open();
        recipe.document.write(html);
        recipe.document.close();
        return false;
    });
})



function isSelected(id) {
	if (document.getElementById(id)) {
		return document.getElementById(id).checked && !document.getElementById(id).disabled;	
	}
	return true;
	
}

</script>

«REM»Content:«ENDREM»


<h1>Configurator «name» </h1>

<form id=configurator>


<div class="tab">
«EXPAND feature(name, false) FOREACH features»
</div>

<div class="tab">
«EXPAND group(name) FOREACH groups»
</div>



<input type="submit" title="Send" name='form'>

</form>


«ENDFILE»


«ENDDEFINE»


«DEFINE group(String parent) FOR Group»
	«this.name»:
	<div class="tab">
	«EXPAND feature(this.name, groupType.toString() == 'XOR') FOREACH features»
	</div>
«ENDDEFINE»



«DEFINE feature(String parent, Boolean isXor) FOR Feature»
«ERROR "Should not happen"»
«ENDDEFINE»

«REM»Simple Feature:«ENDREM»
«DEFINE feature(String parent, Boolean isXor) FOR SimpleFeature»
	
	<label><p>«this.name»: <input type=«IF isXor»radio«ELSE»checkbox«ENDIF» name='«parent»' id='«EXPAND getID FOR this.name»' value='«this.name»' «IF mandatory» checked=checked «ENDIF»></p></label>
	
	<div class="tab">
	«EXPAND group(name) FOREACH this.groups»
	</div>
	<div class="tab">
	«EXPAND feature(this.name, false) FOREACH this.features»
	</div>

	
	<script>
	$(document).ready(function() {
	
		var fun = function() {
			if(«IF dependencies.size> 0»«EXPAND functionFormat FOREACH dependencies» && «ENDIF» isSelected('«EXPAND getID FOR parent»')) {
				document.getElementById('«EXPAND getID FOR name»').removeAttribute('disabled');
			} else {
				document.getElementById('«EXPAND getID FOR name»').setAttribute('disabled', 'disabled');
			}
		};
		var x = document.getElementsByTagName('input');
		var i;
		for (i = 0; i < x.length; i++) {
	    	x[i].addEventListener('change', fun);
		}
		fun();
	});
	</script>
	
«ENDDEFINE»

«REM»Integer Feature«ENDREM»
«DEFINE feature(String parent, Boolean isXor) FOR IntegerFeature»
	<p><label>«this.name»: <input type=range name='«parent»' id='«EXPAND getID FOR this.name»' value='«this.name»' max=«this.maxValue» min=«this.minValue» step=«this.step»></label></p>
	
	<div class="tab">
	«EXPAND group(name) FOREACH this.groups»
	</div>
	<div class="tab">
	«EXPAND feature(this.name, false) FOREACH this.features»
	</div>

«ENDDEFINE»

«DEFINE getID FOR String-»	
«this.replaceAll(" ","-").replaceAll("\\)","").replaceAll("\\(","")-»
«ENDDEFINE-»


«DEFINE prettyPrint FOR Dependency»	«ENDDEFINE»
«DEFINE prettyPrint FOR UnaryDependency»«EXPAND prettyPrint FOR this»«ENDDEFINE»
«DEFINE prettyPrint FOR BinaryDependency-»(«EXPAND prettyPrint FOR leftHand» «operator» «EXPAND prettyPrint FOR rightHand»)«ENDDEFINE»
«DEFINE prettyPrint FOR IsSelectedDependency»«this.target.name» IS «IF not»NOT «ENDIF»SELECTED«ENDDEFINE»
«DEFINE prettyPrint FOR IntegerValueDependency»«target.name»«IF not»!«ENDIF»=«this.value»«ENDDEFINE»


«DEFINE functionFormat FOR Dependency»	«ENDDEFINE»
«DEFINE functionFormat FOR UnaryDependency»«EXPAND functionFormat FOR this»«ENDDEFINE»
«DEFINE functionFormat FOR BinaryDependency-»(«EXPAND functionFormat FOR leftHand» «IF operator.toString() == 'OR'»||«ELSEIF operator.toString()=='AND'»&&«ENDIF» «EXPAND functionFormat FOR rightHand»)«ENDDEFINE»
«DEFINE functionFormat FOR IsSelectedDependency»«IF not»!«ENDIF»isSelected('«EXPAND getID FOR this.target.name»')«ENDDEFINE»
«DEFINE functionFormat FOR IntegerValueDependency»«target.name»«IF not»!«ELSE»=«ENDIF»=«this.value»«ENDDEFINE»



